name: Build and Deploy

# Només s'executa quan es fa push a la branca main
on:
  push:
    branches: [ main ]

# Permisos explícits (opcional, ja que GITHUB_TOKEN té aquests permisos per defecte)
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout del codi
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    # Configurar Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'
        cache: 'npm'

    # Instal·lar dependències
    - name: Install dependencies
      run: |
        rm -rf node_modules package-lock.json
        npm install

    # Compilar el projecte (ajusta segons el teu script de build)
    - name: Build project
      run: npm run build

    # Configurar git per fer commits
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    # Afegir fitxers compilats i fer commit
    - name: Commit built files
      run: |
        git add dist/ # o el directori on es generin els fitxers compilats
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-build: compile assets [skip ci]"
          git push origin main
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Opcional: Crear un tag automàticament
    - name: Create version tag
      if: success()
      run: |
        VERSION=$(node -p "require('./package.json').version")
        if ! git rev-parse "v$VERSION" >/dev/null 2>&1; then
          git tag "v$VERSION"
          git push origin "v$VERSION"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
